/** @type {import('ts-jest/dist/types').InitialOptionsTsJest} */
module.exports = {
  preset: 'ts-jest',
  testEnvironment: 'node',
  setupFilesAfterEnv: ['jest-extended/all', './jest/setupTests.ts'],
  collectCoverageFrom: ['src/**/*.{js,ts}', '!src/**/*.d.ts', '!__mocks__/**'],
  coveragePathIgnorePatterns: [],
  modulePaths: ['<rootDir>/src'],
  moduleNameMapper: {
    '@configs/(.*)': ['<rootDir>/src/configs/$1'],
    '@constants/(.*)': ['<rootDir>/src/constants/$1'],
    '@containers/(.*)': ['<rootDir>/src/containers/$1'],
    '@types/(.*)': ['<rootDir>/src/types/$1'],
    '@layouts/(.*)': ['<rootDir>/src/layouts/$1'],
    '@utils/(.*)': ['<rootDir>/src/utils/$1'],
    '@models/(.*)': ['<rootDir>/src/models/$1'],
    '@modules/(.*)': ['<rootDir>/src/modules/$1'],
    '@views/(.*)': ['<rootDir>/src/views/$1'],
    '@controllers/(.*)': ['<rootDir>/src/controllers/$1'],
    '@services/(.*)': ['<rootDir>/src/services/$1'],
    '@routes/(.*)': ['<rootDir>/src/routes/$1'],
    '@middlewares/(.*)': ['<rootDir>/src/middlewares/$1'],
    '@common/(.*)': ['<rootDir>/src/common/$1'],
    '@mocks/(.*)': ['<rootDir>/__mocks__/$1'],
  },
};
