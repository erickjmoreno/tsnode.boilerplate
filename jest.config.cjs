/** @type {import('ts-jest/dist/types').InitialOptionsTsJest} */
module.exports = {
  preset: 'ts-jest',
  testEnvironment: 'node',
  // Config template
  testPathIgnorePatterns: ['/node_modules/', '.integration.(spec|test).js', '/src/config/env/'],
  collectCoverage: true,
  collectCoverageFrom: [
    'src/**/*.js',
    '!src/config/**',
    '!src/init/**',
    '!src/interceptors/**',
    '!src/constants/**',
    '!src/methods/**',
    '!src/tasks/**',
  ],
  // globalSetup: '<rootDir>/tests/globalSetup.js',
  // setupFiles: ['<rootDir>/tests/jestSetup.js'],
  // setupFilesAfterEnv: ['jest-extended'],
  verbose: true,
  moduleNameMapper: {
    '^@modules(.*)$': '<rootDir>/src/modules$1',
    '^@controllers(.*)$': '<rootDir>/src/controllers$1',
    '^@common(.*)$': '<rootDir>/src/common$1',
    '^@interceptors(.*)$': '<rootDir>/src/interceptors$1',
    '^@constants(.*)$': '<rootDir>/src/constants$1',
    '^@config(.*)$': '<rootDir>/src/config$1',
    '^@models(.*)$': '<rootDir>/src/models$1',
    '^@queues(.*)$': '<rootDir>/src/queues$1',
    '^@utils(.*)$': '<rootDir>/src/utils$1',
    '^@lib(.*)$': '<rootDir>/src/lib$1',
    '^@services(.*)$': '<rootDir>/src/services$1',
    '^@mocks(.*)$': '<rootDir>/__mocks__$1',
  },
};
